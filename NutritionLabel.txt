Типография - это искусство оформления вашего текста, чтобы он был легко читаемым и соответствовал его цели.

В этом курсе вы будете использовать типографию для создания веб-страницы этикетки питания. Вы узнаете, как стилизовать текст, регулировать высоту строки и позиционировать свой текст с помощью CSS.



Шаг 1
Мы предоставили вам базовую HTML-таблицу.

Создайте элемент h1 внутри вашего элемента body и дайте ему текст Nutrition Facts.



Шаг 2
Под элементом h1 добавьте элемент p с текстом 8 8 servings per container.



Шаг З
Добавьте второй элемент p с текстом Serving size 2/3 cup (55g).



Шаг 4
Внутри вашего элемента head, добавьте элемент связи с атрибутом rel, установленным для стилевой таблицы и атрибут href, установленным для https://fonts.googleapis.com/css?family=Open+Sans:400,700,800.

Это импортирует семейство шрифтов Open Sans, с значениями веса шрифта 400, 700 и 800.

Также добавьте элемент ссылки для привязки вашего файла styles.css.



Шаг 5
Создайте селектор body и дайте ему набор font-family Open Sans с резервным вариантом sans-serif.

Помните, что шрифты с пробелами в имени должны быть заключены в кавычки для CSS.



Шаг 6
Шрифт немного мал. Создайте селектор html и установите размер шрифта на 16px.



Шаг 7
Окружите свои элементы h1 и p в элемент div. Дайте этому div атрибут class, установленный на label.



Шаг 8
Границы могут быть использованы для группировки и приоритизации контента.

Создайте селектор .label и установите для него границу 2px solid black.



Шаг 9
Хорошее использование белого пространства может привести к фокусу на важных элементах вашей страницы, и помочь направлять глаза пользователя через ваш текст.

Дайте своему селектору .label свойство width, установленное на 270px.



Шаг 10
Дайте своему селектору .label свойство margin, установленное на 20px auto, и свойство padding, установленное на 0 7px.



Шаг 11
Если вы проверите ваш .label элемент с помощью инструментов разработчика вашего браузера, вы можете заметить, что он на самом деле имеет ширину 288 пикселей вместо 270. Это потому, что по умолчанию браузер включает в себя border  и padding  при определении размера элемента.

Чтобы решить эту проблему, переустановите модель коробки, создав * селектор и дав ему свойство box-sizing для border-box.



Шаг 12
Помните, что использование h1, h2 и аналогичных тегов определяет семантическую структуру вашего HTML. Однако, вы можете настроить CSS этих элементов для контроля визуального потока и иерархии.

Создайте правило h1 и установите свойство font-weight на 800. Это сделает текст h1 более ярким.



Шаг 13
Дайте своему h1 свойство text-align of center.



Шаг 14
Отрегулируйте размещение h1, давая ему верхний и нижний margin -4px и левый и правый границы 0.



Шаг 15
Создайте p и удалите все margins.



Шаг 16Passed
Линии могут помочь разделить и группировать важное содержание, особенно когда пространство ограничено.

Создайте элемент div ниже вашего элемента h1 и дайте ему атрибут class, установленный divider.



Шаг 17
Создайте селектор для нового .divider и установите свойство border-bottom на 1px solid #888989. Также дайте ему верхнюю и нижнюю margin 2px. Он не должен иметь ни левой, ни правой границы.



Шаг 18
Свойство letter-spacing может быть использовано для регулирования пространства между каждым символом текста в элементе.

Дайте своему h1 свойство letter-spacing, установленное на 0.15px, чтобы разделить их немного больше.



Шаг 19
Этикетки по вопросам питания имеют много жирного текста, чтобы привлечь внимание к важной информации. Вместо того, чтобы целиться в каждый элемент, который должен быть жирным, более эффективно использовать класс для применения жирного стиля к каждому элементу.

Дайте второму элементу р атрибут class, установленный на bold.



Шаг 20
Ваш новый класс еще не имеет стиля. Создайте селектор .bold и дайте ему свойство font-weight 800, чтобы сделать текст жирным.

Продолжайте и удалите свойство font-weight также из выбора h1.



Шаг 21
Дайте вашему элементу h1 атрибут class со значением bold. Это сделает текст жирным снова.



Шаг 22
Горизонтальное расстояние между одинаково важными элементами может увеличить читаемость вашего текста.

Окружите текст 2/3 cup (55g) в элемент span.



Шаг 23
Теперь мы можем добавить горизонтальное расстояние с помощью flex. В вашем р, добавьте свойство display для flex и свойство justify-content для space-between.



Шаг 24
Окружите все внутри элемента .label в новом элементе header.



Шаг 25
Теперь обновите свой селектор h1, чтобы быть header h1, чтобы конкретно ориентировать ваш элемент h1 в вашем новом header.



Шаг 26
Создайте новый элемент div под вашим элементом header, и дайте ему атрибут class, установленный diviser large.



Шаг 27
Создать новый .large селектор и дать ему свойство height, установленное на 10 px. Также создать .large, .medium  селектор среды и установить свойство цbackground-color на black.



Шаг 28
Вы можете заметить, что внизу вашего элемента .large по-прежнему есть небольшая обрамление. Чтобы сбросить его, дайте вашему .large, .medium селектору - свойство border, установленное на 0.

Примечание: medium(medium) класс будет использоваться позже для более тонких баров этикетки питания.



Шаг 29
Создайте новый div под вашим .large элементом и дайте ему атрибут класса, установленный для calories-info.



Step 30
Внутри вашего .calories-info элемента, создайте div-элемент. Дайте этому div-элементу атрибут class, установленный left-container. В недавно созданном элементе div, создайте элемент h2 с текстом Amount per serving. Дайте элементу h2 атрибут class, установленный на bold small-text.



Шаг 31
Единица rem означает root em и относится к размеру шрифта элемента html.

Создать small-text селектор и установите размер шрифта на 0.85rem, что будет рассчитано примерно до 13.6px (помните, что вы установили HTML для иметь размер шрифта 16px).



Шаг 32
Создайте селектор .calories-info h2  и удалите все margins.



Шаг 33
Ниже вашего элемента .small-text, создайте новый элемент p с текстом Calories. Также ниже .left-container, создайте новый элемент span с текстом 230.



Шаг 34
Создайте новый .calories-info селектор и дайте ему свойство 'flex'. Также дайте ему свойство justify-content, установленное для свойства space-between и align-items, установленное для flex-end.



Шаг 35
Создайте новый .left-container p селектор, устанавливая верхний и нижний margin на -5px, а левый и правый - на -2px. Также установите font-size на 2em и font-weight на 700.



Шаг 36
Создайте .calorie-info span селектор, установите размер шрифта на 2.4em и font-weight на 700.



Шаг 37
Типография - это скорее искусство, чем наука. Возможно, вам придется подкорректировать такие вещи, как выравнивание, пока оно не будет выглядеть правильно.

Дайте своему .calorie-info span селектор margin -7px -2px. Это сдвинет ваш текст 230 на место.



Шаг 38
Ниже вашего .calories-info элемента, добавьте div с атрибутом класса, установленным на divider medium.



Шаг 39
Создайте .medium селектор и дайте ему свойство height 5px.



Шаг 40
Создайте новый элемент div под вашим .medium элементом. Дайте ему атрибут class, установленный на daily-value small-text. Внутри этого нового div, добавьте элемент p с текстом % Daily Value *, и установите атрибут class на bold right.



Шаг 41
Текст % Daily Value * должно быть выровнено вправо. Создайте селектор .right и используйте свойство justify-content, чтобы сделать это.



Шаг 42
Используйте ваш существующий элемент .divider в качестве примера, чтобы добавить новый разделитель после элемента p.



Шаг 43
После вашего последнего .divider  элемент, создайте р-элемент и дайте ему текст Total Fat 8g 10%. Затем, обмотайте текст Total Fat в один элемент span, текст 10% в другой, и дайте им каждый класс bold.



Шаг 44
Обратите внимание на то, как текст 8g появляется в центре предварительного просмотра. Помещать элемент span, содержащий текст Total Fat вместе с текстом 8g, в дополнительный элемент span для выравнивания.



Шаг 45
Ниже вашего элемента с текстом Total Fat, создайте новый элемент p с текстом Saturated Fat 1g 5%. Обмотайте 5% в span с атрибутом class, установленным на bold. В этом случае этого достаточно, чтобы выровнять процент до 5%.



Шаг 46
Этот новый элемент р должен быть отступён. Дайте ему класс indent.



Шаг 47
Создайте новый селектор .indent и дайте ему свойство margin-left, установленное на 1em.



Шаг 48
Создайте селектор .daily-value p, чтобы выбрать все ваши p элементы в разделе daily-value. Дайте этому новому селектору border-bottom 1px solid #888989.



Step 49
Нижние границы под вашей % Daily Value * и элементы Saturated Fat 1g 5% не расширяют всю ширину этикетки. Добавить класс no-divider для этих двух элементов.



Step 50
Псевдо-селектор :not может быть использован для выбора всех элементов, которые не соответствуют данному правилу CSS.

Пример кода

div:not(#example) {
  color: red;
}

Выше отображает все элементы div без id example.

Измените свой  .daily-value p селектор для исключения .no-divider элементов.



Шаг 51
Теперь вам нужно будет добавить отдельные dividers ниже ваших .no-divider  элементов.

Ваш первый элемент .no-divider имеет после него .divider. Создайте другой .divider после второго элемента .no-divider.



Шаг 52
После вашего последнего .divider, создайте еще один р-элемент с текстом Trans Fat 0g. Курсируйте слово Trans, обернув его в элемент i. Дать новому элементу p атрибут class, установленный indent no-divider. Оберните Trans Fat 0g в элемент span для выравнивания.



Шаг 53
Создайте другой .divider после последнего элемента p.



Шаг 54
После вашего последнего .divider, создайте новый p-элемент с текстом Cholesterol 0mg 0%. Затем обернув текст Cholesterol в один элемент span, 0% в другой, и давать каждому из них класс жирным шрифтом.

Наконец, вложить элемент span, содержащий текст Cholesterol вместе с текстом 0mg, в дополнительный элемент span для выравнивания.



Шаг 55
Ниже последнего элемента р, создайте еще один элемент с текстом Sodium 160mg 7%. Положить Sodium и 7% каждый в свой собственный span с классом bold, как вы сделали с другими.

Затем добавьте дополнительный элемент span вокруг Sodium 160mg для выравнивания.



Шаг 56
Ниже последнего элемента р, добавить еще один элемент p с текстом Total Carbohydrate 37g 13%. Как и раньше, используйте элементы span для построения текста на Total Carbohydrate и 13% жирным шрифтом. Затем, обмотайте питательный элемент и количество в строке для выравнивания.



Шаг 57
Ниже вашего последнего элемента р, добавить еще один элемент p с текстом Dietary Fiber 4g. Дайте элементу р класс, необходимый для его отступа и удаления разделяющей границы. Затем создайте разделитель под этим элементом p.